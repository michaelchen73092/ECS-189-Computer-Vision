function [centers] = detectCircleswithoutR(im, useGradient)
im1=imread('jupiter.jpg');
useGradient=0;
im=rgb2gray(im1);
imedge= edge(im,'Canny');
%%tuning parameter
binsize=30;
thresholdvalue=0.6;
Maxradius=50;
HoughSpace=zeros(size(im,1)+2*Maxradius,size(im,2)+2*Maxradius,Maxradius); %set max radius =50
%%Transfer to HoughSpace
if useGradient ==0
for radius=10:Maxradius    
for i=1:size(im,1)
    for j=1:size(im,2)
        if imedge(i,j)==1
            for theta=1:360
                a=Maxradius+round(j-radius*cos(theta*2*pi/360));
                b=Maxradius+round(i+radius*sin(theta*2*pi/360));
                HoughSpace(b,a,radius) = HoughSpace(b,a,radius)+1;
            end %% end for theta  
        end %%end if statement
    end    
end %end for
end %end radius for loop
elseif useGradient ==1
       [Gx, Gy] = imgradientxy(im);
       [Gmag, Gdir] = imgradient(Gx, Gy);
for i=1:size(im,1)
    for j=1:size(im,2)
        for theta=Gdir(i,j)-45:Gdir(i,j)+45
                a=Maxradius+round(j-radius*cos(theta*2*pi/360));
                b=Maxradius+round(i+radius*sin(theta*2*pi/360));
                HoughSpace(b,a,radius) = HoughSpace(b,a,radius)+1;
        end        
    end    
end %end for
end %end elseif
%figure
%imshow(mat2gray(HoughSpace));
%title('HoughSpace with usdGradient=0')
%%Voting  
a=floor(size(HoughSpace,1)/binsize);
b=floor(size(HoughSpace,2)/binsize);
accumulatorarray=zeros(a,b,50);
%centers=zeros(50,2,Maxradius);
figure   
imshow(im1)
for radius=1:Maxradius
for i=1:a
    for j=1:b
            A=HoughSpace(1+((i-1)*binsize):i*binsize,1+((j-1)*binsize):j*binsize,radius);
            accumulatorarray(i,j,radius)=max(max(A));      
    end    
end
[row,col]=find(accumulatorarray(:,:,radius)>thresholdvalue*max(max(max(accumulatorarray))) & accumulatorarray(:,:,radius)<1.01*max(max(max(accumulatorarray))) );  %%find voting result that larger 0.9*max
%%trace back to original circle center 
for i=1 : size(row,1)
   A=HoughSpace(1+((row(i,1)-1)*binsize):row(i,1)*binsize,1+((col(i,1)-1)*binsize):col(i,1)*binsize,radius); 
   [M,I] = max(A(:));
   [I_row, I_col] = ind2sub(size(A),I);   
   centers(i,1)=(row(i,1)-1)*binsize+I_row-Maxradius; 
   centers(i,2)=(col(i,1)-1)*binsize+I_col-Maxradius;  
   centers(i,3)=radius;
end
end  %k=1:radius
for i=1:size(centers,1)
th = 0:pi/50:2*pi;
xunit0 = centers(i,3) * cos(th) + centers(i,2);
yunit0 = centers(i,3) * sin(th) + centers(i,1);
hold on
plot(xunit0, yunit0,'R','LineWidth',2);
end
title('egg.jpg with multi-radius');    
end %function end